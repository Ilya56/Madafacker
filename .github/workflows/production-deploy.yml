name: Production CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-unit-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run format check
        run: npm run format

      - name: Run lint check
        run: npm run lint

      - name: Build the project
        run: npm run build

      - name: Run unit tests with coverage
        run: npm run test:cov

      - name: Upload unit test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-unit-test

    env:
      DB_PASSWORD: pg-password
      API_KEY: test-api-key

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: pg-password
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build

      - name: Migration
        run: npm run migrate

      - name: Run e2e tests with coverage
        run: npm run test:e2e:cov

      - name: Upload e2e test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-coverage-report
          path: coverage-e2e

  deploy:
    runs-on: ubuntu-latest
    needs: e2e-tests
    environment: production

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Install project dependencies
        run: npm ci

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Run Sequelize Migrations
        run: npm run migrate

      - name: Build Project
        run: npm run build

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Notify of successful deployment
        run: echo "Production deployment successful!"
