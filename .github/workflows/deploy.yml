name: Develop CI/CD
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  API_KEY: ${{ secrets.API_KEY }}

on:
  push:
    ### TEST ###
    branches: [ "develop", "feature/MF-122-*" ]
    ### END TEST ###
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: preview

    strategy:
      matrix:
        node-version: [ 20.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run format check
        run: npm run format

      - name: Run lint check
        run: npm run lint

      - name: Build the project
        run: npm run build

      - name: Run unit tests with coverage
        run: npm run test:cov

      - name: Upload unit test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Run e2e tests without coverage
        run: npm run test:e2e

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: preview

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Install project dependencies
        run: npm ci

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Run Sequelize Migrations
        run: npm run migrate

      - name: Build Project
        run: npm run build

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Notify of successful deployment
        run: echo "Preview deployment successful!"
